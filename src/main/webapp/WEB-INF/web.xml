<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">

    <servlet>
        <servlet-name>spitter</servlet-name><!--默认会加载名为WEB-INF文件目录spitter-servlet.xml文件-->
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>
                classpath:spitter-servlet.xml
                classpath:service-context.xml
                classpath:persistence-context.xml
                classpath:spitter-security.xml
            </param-value>
        </init-param>
    </servlet>

    <servlet-mapping>
        <servlet-name>spitter</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <filter>
        <!--filter-name是有意义的，这个名字用于在spring应用上下文中查找过滤器Bean
        spring security将自动创建一个ID为springSecurityFilterChain的过滤器Bean-->
        <filter-name>springSecurityFilterChain</filter-name>
        <!--DelegatingFilterProxy是一个特殊servlet过滤器
        只是将工作委托给javax.servlet.Filter实现类，这个实现类作为一个bean注册在spring应用
        上下文中-->
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

</web-app>